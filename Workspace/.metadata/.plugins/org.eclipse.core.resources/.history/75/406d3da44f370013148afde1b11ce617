package general;

public class Test {
	
	Integer[] list;
	
	Test(Integer[] l ) {
		list = l;
	}
	
	/*
	 * quicksort
	 */
	public void sort(int start, int end) {
		
		if(null== list)
			return;
		
		int i = start;
		int j = end;
		int pivot = list[start + (end-start)/2];
		
		while(i<=j) {
			while(list[i] < pivot) {
				i++;
			}
			while(list[j] > pivot) {
				j--;
			}
			if(i<=j) {
				int temp = list[i] ; 
				list[i] = list[j];
				list[j] = temp;
				i++;
				j--;
			}
 		}
		if(start < j) {
			sort(start, j);
		}
		if (end > i) {
			sort (i, end);
		}
	}

	
	public int search(int n) {
		if(null==list) {
			return -1;
		}
		int start = 0;
		int end = list.length-1;
		int mid;
		
		while (start <=end) {
			mid = start + (end-start)/2;
			if(list[mid]==n)
				return mid;
			else if (list[mid] > n){
				end = mid -1;
			} else {
				start = mid+1;
			}
		}
		
		return -1;
	}

	public static void main(String[] args) {
		
		Integer[] a = {6,5,4,3,7,2,1};
		Test t = new Test(a);
		
		t.sort(0, a.length-1);
		
		StringBuilder sb = new StringBuilder();
		
		for(int i = 0 ; i<a.length; i++) {
			sb.append(a[i] + " ");
		}
		System.out.println(sb.toString());
		
		System.out.println(t.search(1));
	}
	
}
