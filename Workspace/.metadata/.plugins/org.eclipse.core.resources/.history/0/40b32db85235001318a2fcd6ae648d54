package general;

public class MergeSort<T> implements Comparable {
	
	T[] array;
	
	MergeSort(T[] data) {
		this.array = data;
	}
	
	public T[] sort() {
		return mergeSort(array, 0, (array.length-1));
	}
	
	private T[] mergeSort(T[] arr, int start, int end) {
		
		if(null == arr) {
			return null;
		}

		int midPosition = (start+end)/2;
		
		if((start==end))
			return arr;
		
		//System.out.println("s: " + start + " m: " + midPosition + " e: " + end);
		System.out.println(arrayToString(arr));
		
		mergeSort(arr, start, midPosition);
		mergeSort(arr, midPosition+1, end);
		merge(arr, start, midPosition, end);
		
		return arr;
	}
	
	private T[] merge(T[] array, int startPosition, int midPosition, int endPosition) {
		int leftArraySize = midPosition - startPosition + 1;
		int rightArraySize = endPosition - midPosition;
		
		T[] leftArray = (T[]) new Object[leftArraySize];
		T[] rightArray = (T[]) new Object[rightArraySize];
		
		for(int i=0; i<leftArraySize; i++) {
			leftArray[i] = array[startPosition+i];
		}
		
		for(int i=0; i<rightArraySize; i++) {
			rightArray[i] = array[midPosition+i];
		}
		
		int leftArrayPointer = 0;
		int rightArrayPointer = 0;
		
		for(int i=0; i< (endPosition - startPosition); i++) {
			if(((Comparable) leftArray[leftArrayPointer]).compareTo(rightArray[rightArrayPointer]) <= 0) {
				array[i] = leftArray[leftArrayPointer];
				leftArrayPointer++;
			} else {
				array[i] = rightArray[rightArrayPointer];
				rightArrayPointer++;
			}
		}
		
		return array;
	}
	
	@Override
	public int compareTo(Object obj) {
		return this.compareTo((T) obj);		
	}
	
	@Override
	public String toString(){
		
		if (null == array) {
			return null;
		}
		
		StringBuilder sb = new StringBuilder();
		
		for(int i= 0; i< array.length; i++) {
			sb.append(array[i]+ " ");
		}
		
		return sb.toString();
	}
	
	private String arrayToString(T[] a){
		
		if (null == a) {
			return null;
		}
		
		StringBuilder sb = new StringBuilder();
		
		for(int i= 0; i< a.length; i++) {
			sb.append(a[i]+ " ");
		}
		
		return sb.toString();
	}
	
	public static void main(String[] args) {
		String[] array = {"d", "e", "a", "e", "b"};
		MergeSort<String> mSort = new MergeSort<String>(array);
		mSort.sort();
		System.out.println(mSort);
	}

}
