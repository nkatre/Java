package general;

public interface Queue<T> {

	public boolean enQueue();
	
	public T peek();
	
	public T poll();
	
	public int size();

}

class LinkedListQueue<T> implements Queue<T> {
	
	private DoublyLinkedList<T> queue = new DoublyLinkedList<T>();
	
	private int capacity;

	public int getCapacity() {
		return capacity;
	}

	public void setCapacity(int capacity) {
		this.capacity = capacity;
	}

	@Override
	public boolean enQueue(T data) {
		
		if(size() < capacity) {
			queue.insert(size(), data);
			return true;
		}
		return false;
	}

	@Override
	public T peek() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public T poll() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int size() {
		return queue.size();
	}
	
}
