package general;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

public class LeastRecentlyUsedCache {
	
	int cacheSize = 5;
	
	List<Node> list = new LinkedList<Node>();
	
	Map<String, String> map = new HashMap<String, String>();
	
	
	class Node {
		String data;
		String key;
		
		Node(String key, String data) {
			this.key = key;
			this.data = data;
		}
	}
	
	// use case 1
	public boolean insertInCache(String key, String value) {
		
		
		
		if (list.size() < (cacheSize-1)) {
			list.add(index, element);
		}
		
	}
	
	// use case 2
	public boolean removeEntryFromCache(){
		
	}
	
	// use case 3
	public boolean hasValue(){
		
	}
	
	public boolean isFull() {
		
	}

}
