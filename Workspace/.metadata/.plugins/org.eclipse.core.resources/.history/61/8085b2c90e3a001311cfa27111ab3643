package general;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class Graph {
	
	private static class Node<T> {
		T data;
		Set<Node> reachableFromSet;
		Set<Node> connectedToSet;
	}
	
	
	private static class Edge {
		Node fromNode;
		Node toNode;
		Map <String, Object> edgeProperties;
		
		Edge (Node fromNode, Node toNode) {
			super();
			this.fromNode = fromNode;
			this.toNode = toNode;
			edgeProperties = new HashMap<String, Object>();
		}
		
		Edge (Node fromNode, Node toNode, Map <String, Object> edgeProperties) {
			super();
			this.fromNode = fromNode;
			this.toNode = toNode;
			this.edgeProperties = edgeProperties;
		}

		public Map<String, Object> getEdgeProperties() {
			return edgeProperties;
		}

		public void setEdgeProperties(Map<String, Object> edgeProperties) {
			this.edgeProperties = edgeProperties;
		}
		
		public List<Node> getNodesConnectedByEdge() {
			List<Node> nodes = new LinkedList<Node>();
			nodes.add(fromNode);
			nodes.add(toNode);
			return nodes;
		}
	}
	
	
}